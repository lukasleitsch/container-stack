version: '3'
services:
  gitlab:
    image: 'gitlab/gitlab-ce:latest'
    restart: unless-stopped
    hostname: $HOST
    container_name: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "https://$HOST"
        gitlab_rails['time_zone'] = "Europe/Berlin"
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "$EMAIL_HOST"
        gitlab_rails['smtp_port'] = $EMAIL_PORT
        gitlab_rails['smtp_user_name'] = "$EMAIL_USERNAME"
        gitlab_rails['smtp_password'] = "$EMAIL_PASSWORD"
        gitlab_rails['smtp_domain'] = "$EMAIL_HOST"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true

        gitlab_rails['incoming_email_enabled'] = true
        gitlab_rails['incoming_email_address'] = "$EMAIL_INCOMING_EMAIL_ADDRESS"
        gitlab_rails['incoming_email_email'] = "$EMAIL_USERNAME"
        gitlab_rails['incoming_email_password'] = "$EMAIL_PASSWORD"
        # IMAP server host
        gitlab_rails['incoming_email_host'] = "$EMAIL_HOST"
        # IMAP server port
        gitlab_rails['incoming_email_port'] = 993
        # Whether the IMAP server uses SSL
        gitlab_rails['incoming_email_ssl'] = true
        # Whether the IMAP server uses StartTLS
        gitlab_rails['incoming_email_start_tls'] = false

        # The mailbox where incoming mail will end up. Usually "inbox".
        gitlab_rails['incoming_email_mailbox_name'] = "inbox"
        # The IDLE command timeout.
        gitlab_rails['incoming_email_idle_timeout'] = 60

        gitlab_rails['gitlab_email_from'] = "$EMAIL_USERNAME"
        gitlab_rails['backup_keep_time'] = 3600 # 1h
        gitlab_rails['backup_path'] = "/mnt/backups"

        prometheus_monitoring['enable'] = false
        grafana['enable'] = false
        prometheus['monitor_kubernetes'] = false
        letsencrypt['enabled'] = false

        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['redirect_http_to_https'] = false
        nginx['hsts_max_age'] = 0

        gitlab_rails['gitlab_default_projects_features_container_registry'] = false
        registry['enable'] = false
        gitlab_rails['registry_enabled'] = true
        gitlab_rails['registry_host'] = "$REGISTRY_HOST"
        gitlab_rails['registry_api_url'] = "https://$REGISTRY_HOST"
        gitlab_rails['registry_issuer'] = "omnibus-gitlab-issuer"

      # nginx proxy
      VIRTUAL_HOST: $HOST
      LETSENCRYPT_HOST: $HOST
    ports:
      - "22:22"
    volumes:
      - "gitlab-config:/etc/gitlab"
      - "gitlab-logs:/var/log/gitlab"
      - "gitlab-data:/var/opt/gitlab"
      - "gitlab-registry-config:/var/opt/gitlab/registry"
      - "$BACKUP_PATH:/mnt/backups"
      - "$CERTS_PATH/$REGISTRY_HOST/fullchain.pem:/etc/gitlab/ssl/$REGISTRY_HOST.crt:ro"
      - "$CERTS_PATH/$REGISTRY_HOST/key.pem:/etc/gitlab/ssl/$REGISTRY_HOST.key:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - default
      - proxy

  runner:
    image: ghcr.io/lukasleitsch/hetzner-gitlab-runner:latest
    container_name: gitlab-runner
    restart: unless-stopped
    depends_on:
      - gitlab
    volumes:
      - ./data/runner:/etc/gitlab-runner
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - runner

  minio:
    container_name: gitlab-minio
    image: minio/minio:latest
    restart: unless-stopped
    ports:
      - 10.0.0.2:9000:9000
    volumes:
      - 'gitlab-minio:/export'
    environment:
      MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $MINIO_SECRET_KEY
    command: server /export
    networks:
      - runner

  docker-proxy:
    container_name: gitlab-docker-proxy
    image: registry:2
    restart: unless-stopped
    environment:
      REGISTRY_PROXY_REMOTEURL: 'https://registry-1.docker.io'
    volumes:
      - gitlab-docker-proxy:/var/lib/registry
    ports:
      - 10.0.0.2:5000:5000

  registry:
    image: registry:2
    restart: unless-stopped
    container_name: gitlab-registry
    volumes:
      - 'gitlab-registry-data:/registry'
      - 'gitlab-registry-config:/certs:ro'
    environment:
      REGISTRY_LOG_LEVEL: info
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
      REGISTRY_AUTH_TOKEN_REALM: https://${HOST}/jwt/auth
      REGISTRY_AUTH_TOKEN_SERVICE: container_registry
      REGISTRY_AUTH_TOKEN_ISSUER: omnibus-gitlab-issuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/gitlab-registry.crt
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
      # nginx proxy
      VIRTUAL_HOST: $REGISTRY_HOST
      LETSENCRYPT_HOST: $REGISTRY_HOST
    networks:
      - proxy

volumes:
  gitlab-data:
  gitlab-config:
  gitlab-logs:
  gitlab-minio:
  gitlab-registry-data:
  gitlab-registry-config:
  gitlab-docker-proxy:

networks:
  proxy:
    external:
      name: nginx-proxy
  runner:
